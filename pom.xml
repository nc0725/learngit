<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>myProject</groupId>
	<artifactId>myProject</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>

		<spring.version>4.2.3.RELEASE</spring.version>
		<mysql.version>5.1.38</mysql.version>
		
		<!-- log4j日志文件管理包版本 -->
		<log4j.version>1.2.17</log4j.version>
		<slf4j.version>1.7.13</slf4j.version>
		
		<junit.version>4.12</junit.version>
	</properties>

	<dependencies>
		<!-- spring 开始 -->
		<!-- Spring 核心包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- 这个jar文件是所有应用都要用到的， 它包含访问配置文件、 
			创建和管理bean 以及进行（IoC/DI） 
			操作相关的所有类. 如果应用只需基本的IoC/DI支持， 
			引入spring-core.jar及spring-beans.jar文件就可以了. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- 这个jar文件包含在应用中使用Spring的AOP特性时所需的类. 
			使用基于AOP的Spring特性， 如声明型事务管理（Declarative 
			Transaction Management）， 也要在应用里包含这个jar包. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- 这个jar文件为Spring核心提供了大量扩展. 
			可以找到使用Spring ApplicationContext特性时所需的全部类， 
			JDNI所需的全部类， UI方面的用来与模板（Templating）
			 引擎如Velocity、FreeMarker、JasperReports集成的类， 
			以及校验Validation方面的相关类. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- 这个jar文件包含Spring DAO、Spring Transaction进行数据访问的所有类.
			为了使用声明型事务支持，
			还需在自己的应用里包含spring-aop.jar. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-dao</artifactId>
			<version>2.0.8</version>
		</dependency>
		
		<!-- 这个jar文件包含Spring MVC框架相关的所有类。
			包含国际化、标签、Theme、视图展现的FreeMarker、
			JasperReports、Tiles、Velocity、XSLT相关类。
			当然，如果你的应用使用了独立的MVC框架，
			则无需这个JAR文件里的任何类。 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<!-- 这个jar文件包含Web应用开发时，
			用到Spring框架时所需的核心类，
			包括自动载入WebApplicationContext特性的类、
			Struts与JSF集成类、文件上传的支持类、
			Filter类和大量工具辅助类。 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<!--这个jar文件包含对Spring对JDBC数据访问进行封装的所有类。  -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<!-- 这个jar文件包含Spring对DAO特性集进行了扩展，
			使其支持 iBATIS、JDO、OJB、TopLink，
			因为Hibernate已经独立成包了，现在不包含在这个包里了。
			这个jar文件里大部分的类都要依赖spring-dao.jar里的类，
			用这个包时你需要同时包含spring-dao.jar包。 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<!-- 这个jar文件包含支持缓存Cache（ehcache）、
			JCA、JMX、邮件服务（Java Mail、COS Mail）、
			任务计划Scheduling（Timer、Quartz）方面的类。 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<!-- Spring表达式语言 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- 这个jar文件包含Spring一整套mock类来辅助应用的测试。
			Spring测试套件使用了其中大量mock类，
			这样测试就更加简单。
			模拟HttpServletRequest和HttpServletResponse类在Web应用单元测试是很方便的。 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
			<version>2.0.8</version>
		</dependency>
		
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring 结束  spring 结束  spring 结束  spring 结束  spring 结束  spring 结束  spring 结束 -->
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
		</dependency>
		
		
		<!-- json数据 -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.6.4</version>
		</dependency>
		
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.3</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>

		<!-- 日志文件管理包 -->
		<!-- log start -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- log end -->

	</dependencies>
</project>